6) Huge CPU overhead (partially fixed);
9) Contains a lot of obsolete code.
14) some CPU-consuming code in the instrument list selection callback (really 
in the callback) and main notebook switch callback;
22) ESD driver reported to produce greater delay at start than in ST-gtk1;
36) Pressing Ctrl-O in Instrument editor crashes ST at some machines;
39) wet3.xm: "invalid UTF8 pango warnings" (modinfo page)
42) replace recode.[ch] with g_convert() functions to/from UTF-8 (check for pseudographics support)
Hmm, seems FT2 uses its own encoding, not standard Latin. The custom coding procedures are still required...
The problem seems wider. Multibyte UTF-8 charachters requiure to extend length of some fields like xm->name
and modify encoding procedures. Block signals from entries when setting its text internally. Clean up
st_clean_instrument regarding name and utf_name. Sample name is being clipped if its name consists of
multibyte charachters and the current sample is switched to another and then returned back.
45) Volume ramping->normalize does somethong wrong (subsequently decreases positive half-periods),
at 8 bit samples only, st_sample_cutoff_lowest_8_bits() and the maximum value is negative;
49) Update or even rewrite JACK driver;
52) When recording and selecting 2-samples mode sometimes (after 3 attempts?) sample names in the
module info page don't be updated immediately;
54) Using high frequences at ALSA playback (at some cards > 48000, at other > 64000) gives wrong notes.
Possibly it is a bug of ALSA itself. Test with file output;
55) Cleanup sun audio driver;
56) When the focus is at some entry and it is active, don't handle cut/copy/paste/select all
(whatever else?) operations (done except Ctrl + A);
57) Crash when pressing f in effect type column (jump is 1), after the filling it full seting jump to 2
and pressing 5 in effect parameter column;

Some remarks about asm mixer bug: at the sample end and loop points there are ugly clicks
(ramping works badly). Also when the previous channel has amplitude > 0, the following one
will be triggered to the minimal negative value (maybe it's a cause of the first issue
'cause really ramping and looping is performing using additional channels. Probably the bug
is in the mixing or post-mixing code.

Scopes stop working at some relation between sound and scopes buffer. Explore this issue and probably
exclude manual scope buffer size setting. Or remain it for after time?